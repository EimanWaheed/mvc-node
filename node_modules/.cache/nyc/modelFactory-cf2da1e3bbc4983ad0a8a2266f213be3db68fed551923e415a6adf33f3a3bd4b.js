function cov_1cosovmrnv(){var path="/var/www/html/mvc-node/core/models/modelFactory.js";var hash="2175318b90ed37a0e28e037e3369735c441614c9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/var/www/html/mvc-node/core/models/modelFactory.js",statementMap:{"0":{start:{line:16,column:8},end:{line:21,column:9}},"1":{start:{line:17,column:12},end:{line:17,column:89}},"2":{start:{line:20,column:12},end:{line:20,column:64}},"3":{start:{line:24,column:0},end:{line:24,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:4},end:{line:15,column:5}},loc:{start:{line:15,column:27},end:{line:22,column:5}},line:15}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2175318b90ed37a0e28e037e3369735c441614c9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1cosovmrnv=function(){return actualCoverage;};}return actualCoverage;}cov_1cosovmrnv();/** Class representing the factory for building specified model. It is responsible for building the
 * specified model object. Factory Design Pattern is used in this class for creating desired objects
 * polymorphically. The object made is defined already and thus the required instance is returned.
 */class ModelFactory{/**
    * Creates model of type specified by getting the modelName specified as a parameter
    * in the function definition. It creates the specific model object using the 
    * environment variable from config.js and returns the model object created. Error 
    * handling is also done in the case if the model is not created due to some 
    * reasons,just throw the error specifying the problem message.
    * @param {string} modelName 
    */createModel(modelName){cov_1cosovmrnv().f[0]++;cov_1cosovmrnv().s[0]++;try{cov_1cosovmrnv().s[1]++;return new(require(`${process.env.FILEPATH}/app/models/${modelName}.js`))();}catch(error){cov_1cosovmrnv().s[2]++;throw new Error(`${modelName} object not created.`);}}}cov_1cosovmrnv().s[3]++;module.exports=ModelFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsRmFjdG9yeS5qcyJdLCJuYW1lcyI6WyJNb2RlbEZhY3RvcnkiLCJjcmVhdGVNb2RlbCIsIm1vZGVsTmFtZSIsInJlcXVpcmUiLCJwcm9jZXNzIiwiZW52IiwiRklMRVBBVEgiLCJlcnJvciIsIkVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IjQ5QkFlWTsyRkFmWjtBQUNBO0FBQ0E7QUFDQSxHQUNBLEtBQU1BLENBQUFBLFlBQWEsQ0FFZjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQ0lDLFdBQVcsQ0FBQ0MsU0FBRCxDQUFZLGlEQUNuQixHQUFJLHlCQUNBLE1BQVEsS0FBS0MsT0FBTyxDQUFFLEdBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFTLGVBQWNKLFNBQVUsS0FBakQsQ0FBWixHQUFSLENBQ0gsQ0FDRCxNQUFPSyxLQUFQLENBQWMseUJBQ1YsS0FBTSxJQUFJQyxDQUFBQSxLQUFKLENBQVcsR0FBRU4sU0FBVSxzQkFBdkIsQ0FBTixDQUNILENBQ0osQ0FqQmMsQyx3QkFtQm5CTyxNQUFNLENBQUNDLE9BQVAsQ0FBaUJWLFlBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIENsYXNzIHJlcHJlc2VudGluZyB0aGUgZmFjdG9yeSBmb3IgYnVpbGRpbmcgc3BlY2lmaWVkIG1vZGVsLiBJdCBpcyByZXNwb25zaWJsZSBmb3IgYnVpbGRpbmcgdGhlXG4gKiBzcGVjaWZpZWQgbW9kZWwgb2JqZWN0LiBGYWN0b3J5IERlc2lnbiBQYXR0ZXJuIGlzIHVzZWQgaW4gdGhpcyBjbGFzcyBmb3IgY3JlYXRpbmcgZGVzaXJlZCBvYmplY3RzXG4gKiBwb2x5bW9ycGhpY2FsbHkuIFRoZSBvYmplY3QgbWFkZSBpcyBkZWZpbmVkIGFscmVhZHkgYW5kIHRodXMgdGhlIHJlcXVpcmVkIGluc3RhbmNlIGlzIHJldHVybmVkLlxuICovXG5jbGFzcyBNb2RlbEZhY3Rvcnkge1xuXG4gICAgLyoqXG4gICAgKiBDcmVhdGVzIG1vZGVsIG9mIHR5cGUgc3BlY2lmaWVkIGJ5IGdldHRpbmcgdGhlIG1vZGVsTmFtZSBzcGVjaWZpZWQgYXMgYSBwYXJhbWV0ZXJcbiAgICAqIGluIHRoZSBmdW5jdGlvbiBkZWZpbml0aW9uLiBJdCBjcmVhdGVzIHRoZSBzcGVjaWZpYyBtb2RlbCBvYmplY3QgdXNpbmcgdGhlIFxuICAgICogZW52aXJvbm1lbnQgdmFyaWFibGUgZnJvbSBjb25maWcuanMgYW5kIHJldHVybnMgdGhlIG1vZGVsIG9iamVjdCBjcmVhdGVkLiBFcnJvciBcbiAgICAqIGhhbmRsaW5nIGlzIGFsc28gZG9uZSBpbiB0aGUgY2FzZSBpZiB0aGUgbW9kZWwgaXMgbm90IGNyZWF0ZWQgZHVlIHRvIHNvbWUgXG4gICAgKiByZWFzb25zLGp1c3QgdGhyb3cgdGhlIGVycm9yIHNwZWNpZnlpbmcgdGhlIHByb2JsZW0gbWVzc2FnZS5cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBtb2RlbE5hbWUgXG4gICAgKi9cbiAgICBjcmVhdGVNb2RlbChtb2RlbE5hbWUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiAobmV3IChyZXF1aXJlKGAke3Byb2Nlc3MuZW52LkZJTEVQQVRIfS9hcHAvbW9kZWxzLyR7bW9kZWxOYW1lfS5qc2ApKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bW9kZWxOYW1lfSBvYmplY3Qgbm90IGNyZWF0ZWQuYCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IE1vZGVsRmFjdG9yeTtcblxuIl19