function cov_1911q225lc(){var path="/var/www/html/mvc-node/core/controllers/controllerFactory.js";var hash="c34be7391ee277092edf9cbf9c2b550e8e1ab886";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/var/www/html/mvc-node/core/controllers/controllerFactory.js",statementMap:{"0":{start:{line:17,column:8},end:{line:22,column:9}},"1":{start:{line:18,column:12},end:{line:18,column:107}},"2":{start:{line:21,column:12},end:{line:21,column:95}},"3":{start:{line:25,column:0},end:{line:25,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:16,column:4},end:{line:16,column:5}},loc:{start:{line:16,column:37},end:{line:23,column:5}},line:16}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c34be7391ee277092edf9cbf9c2b550e8e1ab886"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1911q225lc=function(){return actualCoverage;};}return actualCoverage;}cov_1911q225lc();/** 
 * Class representing the factory for building specified controller. It is responsible for building the
 * specified controller object. Factory Design Pattern is used in this class for creating desired objects
 * polymorphically. The object made is defined already and thus the required instance is returned.
 */class ControllerFactory{/**
    * Creates controller of type specified by getting the controllerName specified 
    * as a parameter in the function definition. It creates the specific controller object 
    * using the environment variable from config.js and returns the controller object created. Error 
    * handling is also done in the case if the controller is not created due to some reasons,
    * just throw the error specifying the problem message.
    * @param {string} controllerName 
    */createController(controllerName){cov_1911q225lc().f[0]++;cov_1911q225lc().s[0]++;try{cov_1911q225lc().s[1]++;return new(require(`${process.env.FILEPATH}/app/controllers/${controllerName}Controller.js`))();}catch(error){cov_1911q225lc().s[2]++;return new(require(`${process.env.FILEPATH}/app/controllers/errorController.js`))();}}}cov_1911q225lc().s[3]++;module.exports=ControllerFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJGYWN0b3J5LmpzIl0sIm5hbWVzIjpbIkNvbnRyb2xsZXJGYWN0b3J5IiwiY3JlYXRlQ29udHJvbGxlciIsImNvbnRyb2xsZXJOYW1lIiwicmVxdWlyZSIsInByb2Nlc3MiLCJlbnYiLCJGSUxFUEFUSCIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6ImkvQkFlWTsyRkFmWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsS0FBTUEsQ0FBQUEsaUJBQWtCLENBRXBCO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFDSUMsZ0JBQWdCLENBQUNDLGNBQUQsQ0FBaUIsaURBQzdCLEdBQUkseUJBQ0EsTUFBTyxLQUFLQyxPQUFPLENBQUUsR0FBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVMsb0JBQW1CSixjQUFlLGVBQTNELENBQVosR0FBUCxDQUNILENBQ0QsTUFBT0ssS0FBUCxDQUFjLHlCQUNWLE1BQU8sS0FBS0osT0FBTyxDQUFFLEdBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFTLHFDQUF6QixDQUFaLEdBQVAsQ0FDSCxDQUNKLENBakJtQixDLHdCQW1CeEJFLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQlQsaUJBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIFxuICogQ2xhc3MgcmVwcmVzZW50aW5nIHRoZSBmYWN0b3J5IGZvciBidWlsZGluZyBzcGVjaWZpZWQgY29udHJvbGxlci4gSXQgaXMgcmVzcG9uc2libGUgZm9yIGJ1aWxkaW5nIHRoZVxuICogc3BlY2lmaWVkIGNvbnRyb2xsZXIgb2JqZWN0LiBGYWN0b3J5IERlc2lnbiBQYXR0ZXJuIGlzIHVzZWQgaW4gdGhpcyBjbGFzcyBmb3IgY3JlYXRpbmcgZGVzaXJlZCBvYmplY3RzXG4gKiBwb2x5bW9ycGhpY2FsbHkuIFRoZSBvYmplY3QgbWFkZSBpcyBkZWZpbmVkIGFscmVhZHkgYW5kIHRodXMgdGhlIHJlcXVpcmVkIGluc3RhbmNlIGlzIHJldHVybmVkLlxuICovXG5jbGFzcyBDb250cm9sbGVyRmFjdG9yeSB7XG5cbiAgICAvKipcbiAgICAqIENyZWF0ZXMgY29udHJvbGxlciBvZiB0eXBlIHNwZWNpZmllZCBieSBnZXR0aW5nIHRoZSBjb250cm9sbGVyTmFtZSBzcGVjaWZpZWQgXG4gICAgKiBhcyBhIHBhcmFtZXRlciBpbiB0aGUgZnVuY3Rpb24gZGVmaW5pdGlvbi4gSXQgY3JlYXRlcyB0aGUgc3BlY2lmaWMgY29udHJvbGxlciBvYmplY3QgXG4gICAgKiB1c2luZyB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgZnJvbSBjb25maWcuanMgYW5kIHJldHVybnMgdGhlIGNvbnRyb2xsZXIgb2JqZWN0IGNyZWF0ZWQuIEVycm9yIFxuICAgICogaGFuZGxpbmcgaXMgYWxzbyBkb25lIGluIHRoZSBjYXNlIGlmIHRoZSBjb250cm9sbGVyIGlzIG5vdCBjcmVhdGVkIGR1ZSB0byBzb21lIHJlYXNvbnMsXG4gICAgKiBqdXN0IHRocm93IHRoZSBlcnJvciBzcGVjaWZ5aW5nIHRoZSBwcm9ibGVtIG1lc3NhZ2UuXG4gICAgKiBAcGFyYW0ge3N0cmluZ30gY29udHJvbGxlck5hbWUgXG4gICAgKi9cbiAgICBjcmVhdGVDb250cm9sbGVyKGNvbnRyb2xsZXJOYW1lKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IChyZXF1aXJlKGAke3Byb2Nlc3MuZW52LkZJTEVQQVRIfS9hcHAvY29udHJvbGxlcnMvJHtjb250cm9sbGVyTmFtZX1Db250cm9sbGVyLmpzYCkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyAocmVxdWlyZShgJHtwcm9jZXNzLmVudi5GSUxFUEFUSH0vYXBwL2NvbnRyb2xsZXJzL2Vycm9yQ29udHJvbGxlci5qc2ApKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gQ29udHJvbGxlckZhY3Rvcnk7XG4iXX0=