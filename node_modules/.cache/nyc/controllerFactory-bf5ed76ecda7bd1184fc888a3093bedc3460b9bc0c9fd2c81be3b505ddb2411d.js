function cov_1911q225lc(){var path="/var/www/html/mvc-node/core/controllers/controllerFactory.js";var hash="8a4f0eb7fe805d8a7daca2a485396d10325fa6ec";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/var/www/html/mvc-node/core/controllers/controllerFactory.js",statementMap:{"0":{start:{line:19,column:8},end:{line:30,column:9}},"1":{start:{line:23,column:22},end:{line:23,column:92}},"2":{start:{line:24,column:12},end:{line:24,column:40}},"3":{start:{line:25,column:12},end:{line:25,column:29}},"4":{start:{line:26,column:12},end:{line:26,column:96}},"5":{start:{line:29,column:12},end:{line:29,column:69}},"6":{start:{line:33,column:0},end:{line:33,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:18,column:4},end:{line:18,column:5}},loc:{start:{line:18,column:37},end:{line:31,column:5}},line:18}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8a4f0eb7fe805d8a7daca2a485396d10325fa6ec"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1911q225lc=function(){return actualCoverage;};}return actualCoverage;}cov_1911q225lc();//const autoload = require(`${process.env.FILEPATH}/core/autoload.js`).getInstance();
/** 
 * Class representing the factory for building specified controller. It is responsible for building the
 * specified controller object. Factory Design Pattern is used in this class for creating desired objects
 * polymorphically. The object made is defined already and thus the required instance is returned.
 */class ControllerFactory{/**
    * Creates controller of type specified by getting the controllerName specified 
    * as a parameter in the function definition. It creates the specific controller object 
    * using the environment variable from config.js and returns the controller object created. Error 
    * handling is also done in the case if the controller is not created due to some reasons,
    * just throw the error specifying the problem message.
    * @param {string} controllerName 
    * @returns {Object} controller object.
    */createController(controllerName){cov_1911q225lc().f[0]++;cov_1911q225lc().s[0]++;try{//return (new (autoload.getFileName(`${controllerName}Controller`)));
//console.log(require(`${process.env.FILEPATH}/app/controllers/${controllerName}Controller.js`));
const obj=(cov_1911q225lc().s[1]++,require('/var/www/html/mvc-node/app/controllers/studentController.js'));cov_1911q225lc().s[2]++;console.log(controllerName);cov_1911q225lc().s[3]++;console.log(obj);cov_1911q225lc().s[4]++;return new(require('/var/www/html/mvc-node/app/controllers/studentController.js'))();}catch(error){cov_1911q225lc().s[5]++;throw new Error(`${controllerName} object not created.`);}}}cov_1911q225lc().s[6]++;module.exports=ControllerFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJGYWN0b3J5LmpzIl0sIm5hbWVzIjpbIkNvbnRyb2xsZXJGYWN0b3J5IiwiY3JlYXRlQ29udHJvbGxlciIsImNvbnRyb2xsZXJOYW1lIiwib2JqIiwicmVxdWlyZSIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsIkVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IjBxQ0FlWTsyRkFmWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxLQUFNQSxDQUFBQSxpQkFBa0IsQ0FFcEI7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQ0lDLGdCQUFnQixDQUFDQyxjQUFELENBQWlCLGlEQUM3QixHQUFJLENBRUE7QUFDQTtBQUNBLEtBQU1DLENBQUFBLEdBQUcsMEJBQUNDLE9BQU8sQ0FBQyw2REFBRCxDQUFSLENBQVQsQ0FKQSx3QkFLQUMsT0FBTyxDQUFDQyxHQUFSLENBQVlKLGNBQVosRUFMQSx3QkFNQUcsT0FBTyxDQUFDQyxHQUFSLENBQVlILEdBQVosRUFOQSx3QkFPQSxNQUFPLEtBQUtDLE9BQU8sQ0FBQyw2REFBRCxDQUFaLEdBQVAsQ0FDSCxDQUNELE1BQU9HLEtBQVAsQ0FBYyx5QkFDVixLQUFNLElBQUlDLENBQUFBLEtBQUosQ0FBVyxHQUFFTixjQUFlLHNCQUE1QixDQUFOLENBQ0gsQ0FDSixDQXhCbUIsQyx3QkEwQnhCTyxNQUFNLENBQUNDLE9BQVAsQ0FBaUJWLGlCQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8vY29uc3QgYXV0b2xvYWQgPSByZXF1aXJlKGAke3Byb2Nlc3MuZW52LkZJTEVQQVRIfS9jb3JlL2F1dG9sb2FkLmpzYCkuZ2V0SW5zdGFuY2UoKTtcbi8qKiBcbiAqIENsYXNzIHJlcHJlc2VudGluZyB0aGUgZmFjdG9yeSBmb3IgYnVpbGRpbmcgc3BlY2lmaWVkIGNvbnRyb2xsZXIuIEl0IGlzIHJlc3BvbnNpYmxlIGZvciBidWlsZGluZyB0aGVcbiAqIHNwZWNpZmllZCBjb250cm9sbGVyIG9iamVjdC4gRmFjdG9yeSBEZXNpZ24gUGF0dGVybiBpcyB1c2VkIGluIHRoaXMgY2xhc3MgZm9yIGNyZWF0aW5nIGRlc2lyZWQgb2JqZWN0c1xuICogcG9seW1vcnBoaWNhbGx5LiBUaGUgb2JqZWN0IG1hZGUgaXMgZGVmaW5lZCBhbHJlYWR5IGFuZCB0aHVzIHRoZSByZXF1aXJlZCBpbnN0YW5jZSBpcyByZXR1cm5lZC5cbiAqL1xuY2xhc3MgQ29udHJvbGxlckZhY3Rvcnkge1xuXG4gICAgLyoqXG4gICAgKiBDcmVhdGVzIGNvbnRyb2xsZXIgb2YgdHlwZSBzcGVjaWZpZWQgYnkgZ2V0dGluZyB0aGUgY29udHJvbGxlck5hbWUgc3BlY2lmaWVkIFxuICAgICogYXMgYSBwYXJhbWV0ZXIgaW4gdGhlIGZ1bmN0aW9uIGRlZmluaXRpb24uIEl0IGNyZWF0ZXMgdGhlIHNwZWNpZmljIGNvbnRyb2xsZXIgb2JqZWN0IFxuICAgICogdXNpbmcgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIGZyb20gY29uZmlnLmpzIGFuZCByZXR1cm5zIHRoZSBjb250cm9sbGVyIG9iamVjdCBjcmVhdGVkLiBFcnJvciBcbiAgICAqIGhhbmRsaW5nIGlzIGFsc28gZG9uZSBpbiB0aGUgY2FzZSBpZiB0aGUgY29udHJvbGxlciBpcyBub3QgY3JlYXRlZCBkdWUgdG8gc29tZSByZWFzb25zLFxuICAgICoganVzdCB0aHJvdyB0aGUgZXJyb3Igc3BlY2lmeWluZyB0aGUgcHJvYmxlbSBtZXNzYWdlLlxuICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRyb2xsZXJOYW1lIFxuICAgICogQHJldHVybnMge09iamVjdH0gY29udHJvbGxlciBvYmplY3QuXG4gICAgKi9cbiAgICBjcmVhdGVDb250cm9sbGVyKGNvbnRyb2xsZXJOYW1lKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vcmV0dXJuIChuZXcgKGF1dG9sb2FkLmdldEZpbGVOYW1lKGAke2NvbnRyb2xsZXJOYW1lfUNvbnRyb2xsZXJgKSkpO1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXF1aXJlKGAke3Byb2Nlc3MuZW52LkZJTEVQQVRIfS9hcHAvY29udHJvbGxlcnMvJHtjb250cm9sbGVyTmFtZX1Db250cm9sbGVyLmpzYCkpO1xuICAgICAgICAgICAgY29uc3Qgb2JqPXJlcXVpcmUoJy92YXIvd3d3L2h0bWwvbXZjLW5vZGUvYXBwL2NvbnRyb2xsZXJzL3N0dWRlbnRDb250cm9sbGVyLmpzJyk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjb250cm9sbGVyTmFtZSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhvYmopO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyAocmVxdWlyZSgnL3Zhci93d3cvaHRtbC9tdmMtbm9kZS9hcHAvY29udHJvbGxlcnMvc3R1ZGVudENvbnRyb2xsZXIuanMnKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7Y29udHJvbGxlck5hbWV9IG9iamVjdCBub3QgY3JlYXRlZC5gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gQ29udHJvbGxlckZhY3Rvcnk7XG4iXX0=