function cov_1ovxvv8tpl(){var path="/home/eiman.waheed/Desktop/mvc-node/core/dispatcher.js";var hash="5b4c5ff37fc75ec60b727456a835e1eddeea3e40";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/eiman.waheed/Desktop/mvc-node/core/dispatcher.js",statementMap:{"0":{start:{line:2,column:17},end:{line:2,column:68}},"1":{start:{line:10,column:0},end:{line:28,column:1}},"2":{start:{line:20,column:30},end:{line:20,column:63}},"3":{start:{line:21,column:29},end:{line:21,column:60}},"4":{start:{line:22,column:25},end:{line:22,column:52}},"5":{start:{line:23,column:8},end:{line:25,column:9}},"6":{start:{line:24,column:12},end:{line:24,column:39}},"7":{start:{line:26,column:8},end:{line:26,column:128}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:22},end:{line:27,column:5}},line:17}},branchMap:{"0":{loc:{start:{line:23,column:8},end:{line:25,column:9}},type:"if",locations:[{start:{line:23,column:8},end:{line:25,column:9}},{start:{line:23,column:8},end:{line:25,column:9}}],line:23}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5b4c5ff37fc75ec60b727456a835e1eddeea3e40"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ovxvv8tpl=function(){return actualCoverage;};}return actualCoverage;}cov_1ovxvv8tpl();/** Acquire Autoloader. */const autoload=(cov_1ovxvv8tpl().s[0]++,require(`${process.env.FILEPATH}/core/autoload.js`));/** Class representing dispatcher which is responsbible for getting the required 
 * controller and invoking the performAction method for deciding the CRUD operation.
 * It checks the availability of controller and action, invokes the controller factory 
 * which returns the required controller object. It then dispatches the controller and 
 * action from request to the specified method. 
 */cov_1ovxvv8tpl().s[1]++;module.exports=class Dispatcher{/** Fetches the request instance, get the controller name and action, check if
     * controller is available or not and then creates the controller object by 
     * invoking controller factory and retrieves the targetted controller. 
     * @returns {Object} response.
     */dispatchRequest(){cov_1ovxvv8tpl().f[0]++;/** Check the availibility of controller. */let requestInstance=(cov_1ovxvv8tpl().s[2]++,autoload('request').getInstance());let controllerName=(cov_1ovxvv8tpl().s[3]++,requestInstance.getController());let actionName=(cov_1ovxvv8tpl().s[4]++,requestInstance.getAction());cov_1ovxvv8tpl().s[5]++;if(!controllerName){cov_1ovxvv8tpl().b[0][0]++;cov_1ovxvv8tpl().s[6]++;controllerName='default';}else{cov_1ovxvv8tpl().b[0][1]++;}cov_1ovxvv8tpl().s[7]++;return new(autoload('controllerFactory'))().createController(controllerName).performAction(controllerName,actionName);}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpc3BhdGNoZXIuanMiXSwibmFtZXMiOlsiYXV0b2xvYWQiLCJyZXF1aXJlIiwicHJvY2VzcyIsImVudiIsIkZJTEVQQVRIIiwibW9kdWxlIiwiZXhwb3J0cyIsIkRpc3BhdGNoZXIiLCJkaXNwYXRjaFJlcXVlc3QiLCJyZXF1ZXN0SW5zdGFuY2UiLCJnZXRJbnN0YW5jZSIsImNvbnRyb2xsZXJOYW1lIiwiZ2V0Q29udHJvbGxlciIsImFjdGlvbk5hbWUiLCJnZXRBY3Rpb24iLCJjcmVhdGVDb250cm9sbGVyIiwicGVyZm9ybUFjdGlvbiJdLCJtYXBwaW5ncyI6Iis1Q0FlWTsyRkFmWiwwQkFDQSxLQUFNQSxDQUFBQSxRQUFRLDBCQUFHQyxPQUFPLENBQUUsR0FBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVMsbUJBQXpCLENBQVYsQ0FBZCxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHLHdCQUNBQyxNQUFNLENBQUNDLE9BQVAsQ0FBaUIsS0FBTUMsQ0FBQUEsVUFBVyxDQUU5QjtBQUNKO0FBQ0E7QUFDQTtBQUNBLE9BQ0lDLGVBQWUsRUFBRyx5QkFFZCw0Q0FDQSxHQUFJQyxDQUFBQSxlQUFlLDBCQUFHVCxRQUFRLENBQUMsU0FBRCxDQUFSLENBQW9CVSxXQUFwQixFQUFILENBQW5CLENBQ0EsR0FBSUMsQ0FBQUEsY0FBYywwQkFBR0YsZUFBZSxDQUFDRyxhQUFoQixFQUFILENBQWxCLENBQ0EsR0FBSUMsQ0FBQUEsVUFBVSwwQkFBR0osZUFBZSxDQUFDSyxTQUFoQixFQUFILENBQWQsQ0FMYyx3QkFNZCxHQUFJLENBQUNILGNBQUwsQ0FBcUIsb0RBQ2pCQSxjQUFjLENBQUcsU0FBakIsQ0FDSCxDQUZELGlDQU5jLHdCQVNkLE1BQVEsS0FBS1gsUUFBUSxDQUFDLG1CQUFELENBQWIsR0FBRCxDQUFzQ2UsZ0JBQXRDLENBQXVESixjQUF2RCxFQUF1RUssYUFBdkUsQ0FBcUZMLGNBQXJGLENBQXFHRSxVQUFyRyxDQUFQLENBQ0gsQ0FqQjZCLENBQWxDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEFjcXVpcmUgQXV0b2xvYWRlci4gKi9cbmNvbnN0IGF1dG9sb2FkID0gcmVxdWlyZShgJHtwcm9jZXNzLmVudi5GSUxFUEFUSH0vY29yZS9hdXRvbG9hZC5qc2ApO1xuXG4vKiogQ2xhc3MgcmVwcmVzZW50aW5nIGRpc3BhdGNoZXIgd2hpY2ggaXMgcmVzcG9uc2JpYmxlIGZvciBnZXR0aW5nIHRoZSByZXF1aXJlZCBcbiAqIGNvbnRyb2xsZXIgYW5kIGludm9raW5nIHRoZSBwZXJmb3JtQWN0aW9uIG1ldGhvZCBmb3IgZGVjaWRpbmcgdGhlIENSVUQgb3BlcmF0aW9uLlxuICogSXQgY2hlY2tzIHRoZSBhdmFpbGFiaWxpdHkgb2YgY29udHJvbGxlciBhbmQgYWN0aW9uLCBpbnZva2VzIHRoZSBjb250cm9sbGVyIGZhY3RvcnkgXG4gKiB3aGljaCByZXR1cm5zIHRoZSByZXF1aXJlZCBjb250cm9sbGVyIG9iamVjdC4gSXQgdGhlbiBkaXNwYXRjaGVzIHRoZSBjb250cm9sbGVyIGFuZCBcbiAqIGFjdGlvbiBmcm9tIHJlcXVlc3QgdG8gdGhlIHNwZWNpZmllZCBtZXRob2QuIFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGNsYXNzIERpc3BhdGNoZXIge1xuXG4gICAgLyoqIEZldGNoZXMgdGhlIHJlcXVlc3QgaW5zdGFuY2UsIGdldCB0aGUgY29udHJvbGxlciBuYW1lIGFuZCBhY3Rpb24sIGNoZWNrIGlmXG4gICAgICogY29udHJvbGxlciBpcyBhdmFpbGFibGUgb3Igbm90IGFuZCB0aGVuIGNyZWF0ZXMgdGhlIGNvbnRyb2xsZXIgb2JqZWN0IGJ5IFxuICAgICAqIGludm9raW5nIGNvbnRyb2xsZXIgZmFjdG9yeSBhbmQgcmV0cmlldmVzIHRoZSB0YXJnZXR0ZWQgY29udHJvbGxlci4gXG4gICAgICogQHJldHVybnMge09iamVjdH0gcmVzcG9uc2UuXG4gICAgICovXG4gICAgZGlzcGF0Y2hSZXF1ZXN0KCkge1xuXG4gICAgICAgIC8qKiBDaGVjayB0aGUgYXZhaWxpYmlsaXR5IG9mIGNvbnRyb2xsZXIuICovXG4gICAgICAgIGxldCByZXF1ZXN0SW5zdGFuY2UgPSBhdXRvbG9hZCgncmVxdWVzdCcpLmdldEluc3RhbmNlKCk7XG4gICAgICAgIGxldCBjb250cm9sbGVyTmFtZSA9IHJlcXVlc3RJbnN0YW5jZS5nZXRDb250cm9sbGVyKCk7XG4gICAgICAgIGxldCBhY3Rpb25OYW1lID0gcmVxdWVzdEluc3RhbmNlLmdldEFjdGlvbigpO1xuICAgICAgICBpZiAoIWNvbnRyb2xsZXJOYW1lKSB7XG4gICAgICAgICAgICBjb250cm9sbGVyTmFtZSA9ICdkZWZhdWx0JztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKG5ldyAoYXV0b2xvYWQoJ2NvbnRyb2xsZXJGYWN0b3J5JykpKS5jcmVhdGVDb250cm9sbGVyKGNvbnRyb2xsZXJOYW1lKS5wZXJmb3JtQWN0aW9uKGNvbnRyb2xsZXJOYW1lLCBhY3Rpb25OYW1lKTtcbiAgICB9XG59Il19