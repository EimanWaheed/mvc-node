function cov_2j3dqrur1u(){var path="/home/eiman.waheed/Desktop/mvc-node/core/models/modelFactory.js";var hash="7bd61576efb10602f90b1374c027f73169b769a5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/eiman.waheed/Desktop/mvc-node/core/models/modelFactory.js",statementMap:{"0":{start:{line:5,column:0},end:{line:24,column:1}},"1":{start:{line:16,column:8},end:{line:22,column:9}},"2":{start:{line:17,column:12},end:{line:17,column:89}},"3":{start:{line:20,column:12},end:{line:20,column:31}},"4":{start:{line:21,column:12},end:{line:21,column:64}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:4},end:{line:15,column:5}},loc:{start:{line:15,column:27},end:{line:23,column:5}},line:15}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7bd61576efb10602f90b1374c027f73169b769a5"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2j3dqrur1u=function(){return actualCoverage;};}return actualCoverage;}cov_2j3dqrur1u();cov_2j3dqrur1u().s[0]++;/** Class representing the factory for building specified model. It is responsible for building the
 * specified model object. Factory Design Pattern is used in this class for creating desired objects
 * polymorphically. The object made is defined already and thus the required instance is returned.
 */module.exports=class ModelFactory{/**
    * Creates model of type specified by getting the modelName specified as a parameter
    * in the function definition. It creates the specific model object using the 
    * environment variable from config.js and returns the model object created. Error 
    * handling is also done in the case if the model is not created due to some 
    * reasons,just throw the error specifying the problem message.
    * @param {string} modelName 
    */createModel(modelName){cov_2j3dqrur1u().f[0]++;cov_2j3dqrur1u().s[1]++;try{cov_2j3dqrur1u().s[2]++;return new(require(`${process.env.FILEPATH}/app/models/${modelName}.js`))();}catch(error){cov_2j3dqrur1u().s[3]++;console.log(error);cov_2j3dqrur1u().s[4]++;throw new Error(`${modelName} object not created.`);}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsRmFjdG9yeS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiTW9kZWxGYWN0b3J5IiwiY3JlYXRlTW9kZWwiLCJtb2RlbE5hbWUiLCJyZXF1aXJlIiwicHJvY2VzcyIsImVudiIsIkZJTEVQQVRIIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiRXJyb3IiXSwibWFwcGluZ3MiOiJrakNBZVk7bUhBZlo7QUFDQTtBQUNBO0FBQ0EsR0FDQUEsTUFBTSxDQUFDQyxPQUFQLENBQWlCLEtBQU1DLENBQUFBLFlBQWEsQ0FFaEM7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUNJQyxXQUFXLENBQUNDLFNBQUQsQ0FBWSxpREFDbkIsR0FBSSx5QkFDQSxNQUFRLEtBQUtDLE9BQU8sQ0FBRSxHQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBUyxlQUFjSixTQUFVLEtBQWpELENBQVosR0FBUixDQUNILENBQ0QsTUFBT0ssS0FBUCxDQUFjLHlCQUNWQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsS0FBWixFQURVLHdCQUVWLEtBQU0sSUFBSUcsQ0FBQUEsS0FBSixDQUFXLEdBQUVSLFNBQVUsc0JBQXZCLENBQU4sQ0FDSCxDQUNKLENBbEIrQixDQUFwQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBDbGFzcyByZXByZXNlbnRpbmcgdGhlIGZhY3RvcnkgZm9yIGJ1aWxkaW5nIHNwZWNpZmllZCBtb2RlbC4gSXQgaXMgcmVzcG9uc2libGUgZm9yIGJ1aWxkaW5nIHRoZVxuICogc3BlY2lmaWVkIG1vZGVsIG9iamVjdC4gRmFjdG9yeSBEZXNpZ24gUGF0dGVybiBpcyB1c2VkIGluIHRoaXMgY2xhc3MgZm9yIGNyZWF0aW5nIGRlc2lyZWQgb2JqZWN0c1xuICogcG9seW1vcnBoaWNhbGx5LiBUaGUgb2JqZWN0IG1hZGUgaXMgZGVmaW5lZCBhbHJlYWR5IGFuZCB0aHVzIHRoZSByZXF1aXJlZCBpbnN0YW5jZSBpcyByZXR1cm5lZC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBNb2RlbEZhY3Rvcnkge1xuXG4gICAgLyoqXG4gICAgKiBDcmVhdGVzIG1vZGVsIG9mIHR5cGUgc3BlY2lmaWVkIGJ5IGdldHRpbmcgdGhlIG1vZGVsTmFtZSBzcGVjaWZpZWQgYXMgYSBwYXJhbWV0ZXJcbiAgICAqIGluIHRoZSBmdW5jdGlvbiBkZWZpbml0aW9uLiBJdCBjcmVhdGVzIHRoZSBzcGVjaWZpYyBtb2RlbCBvYmplY3QgdXNpbmcgdGhlIFxuICAgICogZW52aXJvbm1lbnQgdmFyaWFibGUgZnJvbSBjb25maWcuanMgYW5kIHJldHVybnMgdGhlIG1vZGVsIG9iamVjdCBjcmVhdGVkLiBFcnJvciBcbiAgICAqIGhhbmRsaW5nIGlzIGFsc28gZG9uZSBpbiB0aGUgY2FzZSBpZiB0aGUgbW9kZWwgaXMgbm90IGNyZWF0ZWQgZHVlIHRvIHNvbWUgXG4gICAgKiByZWFzb25zLGp1c3QgdGhyb3cgdGhlIGVycm9yIHNwZWNpZnlpbmcgdGhlIHByb2JsZW0gbWVzc2FnZS5cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBtb2RlbE5hbWUgXG4gICAgKi9cbiAgICBjcmVhdGVNb2RlbChtb2RlbE5hbWUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiAobmV3IChyZXF1aXJlKGAke3Byb2Nlc3MuZW52LkZJTEVQQVRIfS9hcHAvbW9kZWxzLyR7bW9kZWxOYW1lfS5qc2ApKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bW9kZWxOYW1lfSBvYmplY3Qgbm90IGNyZWF0ZWQuYCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuIl19