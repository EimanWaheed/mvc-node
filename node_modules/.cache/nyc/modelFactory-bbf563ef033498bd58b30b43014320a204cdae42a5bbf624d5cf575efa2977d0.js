function cov_1cosovmrnv(){var path="/var/www/html/mvc-node/core/models/modelFactory.js";var hash="9fc0cefbf7a0d1678ac8e3ebc17e032284732201";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/var/www/html/mvc-node/core/models/modelFactory.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:82}},"1":{start:{line:18,column:8},end:{line:23,column:9}},"2":{start:{line:19,column:12},end:{line:19,column:62}},"3":{start:{line:22,column:12},end:{line:22,column:64}},"4":{start:{line:26,column:0},end:{line:26,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:27},end:{line:24,column:5}},line:17}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9fc0cefbf7a0d1678ac8e3ebc17e032284732201"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1cosovmrnv=function(){return actualCoverage;};}return actualCoverage;}cov_1cosovmrnv();const autoload=(cov_1cosovmrnv().s[0]++,require(`${process.env.FILEPATH}/core/autoload.js`).getInstance());/** Class representing the factory for building specified model. It is responsible for building the
 * specified model object. Factory Design Pattern is used in this class for creating desired objects
 * polymorphically. The object made is defined already and thus the required instance is returned.
 */class ModelFactory{/**
    * Creates model of type specified by getting the modelName specified as a parameter
    * in the function definition. It creates the specific model object using the 
    * environment variable from config.js and returns the model object created. Error 
    * handling is also done in the case if the model is not created due to some 
    * reasons,just throw the error specifying the problem message.
    * @param {string} modelName 
    * @returns {Object} model object.
    */createModel(modelName){cov_1cosovmrnv().f[0]++;cov_1cosovmrnv().s[1]++;try{cov_1cosovmrnv().s[2]++;return new(autoload.getFileName(`${modelName}`))();}catch(error){cov_1cosovmrnv().s[3]++;throw new Error(`${modelName} object not created.`);}}}cov_1cosovmrnv().s[4]++;module.exports=ModelFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsRmFjdG9yeS5qcyJdLCJuYW1lcyI6WyJhdXRvbG9hZCIsInJlcXVpcmUiLCJwcm9jZXNzIiwiZW52IiwiRklMRVBBVEgiLCJnZXRJbnN0YW5jZSIsIk1vZGVsRmFjdG9yeSIsImNyZWF0ZU1vZGVsIiwibW9kZWxOYW1lIiwiZ2V0RmlsZU5hbWUiLCJlcnJvciIsIkVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IndoQ0FlWTsyRkFmWixLQUFNQSxDQUFBQSxRQUFRLDBCQUFHQyxPQUFPLENBQUUsR0FBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVMsbUJBQXpCLENBQVAsQ0FBb0RDLFdBQXBELEVBQUgsQ0FBZCxDQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsS0FBTUMsQ0FBQUEsWUFBYSxDQUVmO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUNJQyxXQUFXLENBQUNDLFNBQUQsQ0FBWSxpREFDbkIsR0FBSSx5QkFDQSxNQUFPLEtBQUtSLFFBQVEsQ0FBQ1MsV0FBVCxDQUFzQixHQUFFRCxTQUFVLEVBQWxDLENBQUwsR0FBUCxDQUNILENBQ0QsTUFBT0UsS0FBUCxDQUFjLHlCQUNWLEtBQU0sSUFBSUMsQ0FBQUEsS0FBSixDQUFXLEdBQUVILFNBQVUsc0JBQXZCLENBQU4sQ0FDSCxDQUNKLENBbEJjLEMsd0JBb0JuQkksTUFBTSxDQUFDQyxPQUFQLENBQWlCUCxZQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGF1dG9sb2FkID0gcmVxdWlyZShgJHtwcm9jZXNzLmVudi5GSUxFUEFUSH0vY29yZS9hdXRvbG9hZC5qc2ApLmdldEluc3RhbmNlKCk7XG4vKiogQ2xhc3MgcmVwcmVzZW50aW5nIHRoZSBmYWN0b3J5IGZvciBidWlsZGluZyBzcGVjaWZpZWQgbW9kZWwuIEl0IGlzIHJlc3BvbnNpYmxlIGZvciBidWlsZGluZyB0aGVcbiAqIHNwZWNpZmllZCBtb2RlbCBvYmplY3QuIEZhY3RvcnkgRGVzaWduIFBhdHRlcm4gaXMgdXNlZCBpbiB0aGlzIGNsYXNzIGZvciBjcmVhdGluZyBkZXNpcmVkIG9iamVjdHNcbiAqIHBvbHltb3JwaGljYWxseS4gVGhlIG9iamVjdCBtYWRlIGlzIGRlZmluZWQgYWxyZWFkeSBhbmQgdGh1cyB0aGUgcmVxdWlyZWQgaW5zdGFuY2UgaXMgcmV0dXJuZWQuXG4gKi9cbmNsYXNzIE1vZGVsRmFjdG9yeSB7XG5cbiAgICAvKipcbiAgICAqIENyZWF0ZXMgbW9kZWwgb2YgdHlwZSBzcGVjaWZpZWQgYnkgZ2V0dGluZyB0aGUgbW9kZWxOYW1lIHNwZWNpZmllZCBhcyBhIHBhcmFtZXRlclxuICAgICogaW4gdGhlIGZ1bmN0aW9uIGRlZmluaXRpb24uIEl0IGNyZWF0ZXMgdGhlIHNwZWNpZmljIG1vZGVsIG9iamVjdCB1c2luZyB0aGUgXG4gICAgKiBlbnZpcm9ubWVudCB2YXJpYWJsZSBmcm9tIGNvbmZpZy5qcyBhbmQgcmV0dXJucyB0aGUgbW9kZWwgb2JqZWN0IGNyZWF0ZWQuIEVycm9yIFxuICAgICogaGFuZGxpbmcgaXMgYWxzbyBkb25lIGluIHRoZSBjYXNlIGlmIHRoZSBtb2RlbCBpcyBub3QgY3JlYXRlZCBkdWUgdG8gc29tZSBcbiAgICAqIHJlYXNvbnMsanVzdCB0aHJvdyB0aGUgZXJyb3Igc3BlY2lmeWluZyB0aGUgcHJvYmxlbSBtZXNzYWdlLlxuICAgICogQHBhcmFtIHtzdHJpbmd9IG1vZGVsTmFtZSBcbiAgICAqIEByZXR1cm5zIHtPYmplY3R9IG1vZGVsIG9iamVjdC5cbiAgICAqL1xuICAgIGNyZWF0ZU1vZGVsKG1vZGVsTmFtZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyAoYXV0b2xvYWQuZ2V0RmlsZU5hbWUoYCR7bW9kZWxOYW1lfWApKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHttb2RlbE5hbWV9IG9iamVjdCBub3QgY3JlYXRlZC5gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gTW9kZWxGYWN0b3J5O1xuXG4iXX0=