function cov_1cosq8rz5a(){var path="/home/eiman.waheed/Desktop/mvc-node/core/controllers/controllerFactory.js";var hash="80efd45e4d37e8bb82a33ff7a159b33adfb0ed47";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/eiman.waheed/Desktop/mvc-node/core/controllers/controllerFactory.js",statementMap:{"0":{start:{line:17,column:8},end:{line:22,column:9}},"1":{start:{line:18,column:12},end:{line:18,column:107}},"2":{start:{line:21,column:12},end:{line:21,column:69}},"3":{start:{line:25,column:0},end:{line:25,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:16,column:4},end:{line:16,column:5}},loc:{start:{line:16,column:37},end:{line:23,column:5}},line:16}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"80efd45e4d37e8bb82a33ff7a159b33adfb0ed47"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1cosq8rz5a=function(){return actualCoverage;};}return actualCoverage;}cov_1cosq8rz5a();/** 
 * Class representing the factory for building specified controller. It is responsible for building the
 * specified controller object. Factory Design Pattern is used in this class for creating desired objects
 * polymorphically. The object made is defined already and thus the required instance is returned.
 */class ControllerFactory{/**
    * Creates controller of type specified by getting the controllerName specified 
    * as a parameter in the function definition. It creates the specific controller object 
    * using the environment variable from config.js and returns the controller object created. Error 
    * handling is also done in the case if the controller is not created due to some reasons,
    * just throw the error specifying the problem message.
    * @param {string} controllerName 
    */createController(controllerName){cov_1cosq8rz5a().f[0]++;cov_1cosq8rz5a().s[0]++;try{cov_1cosq8rz5a().s[1]++;return new(require(`${process.env.FILEPATH}/app/controllers/${controllerName}Controller.js`))();}catch(error){cov_1cosq8rz5a().s[2]++;throw new Error(`${controllerName} object not created.`);}}}cov_1cosq8rz5a().s[3]++;module.exports=ControllerFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJGYWN0b3J5LmpzIl0sIm5hbWVzIjpbIkNvbnRyb2xsZXJGYWN0b3J5IiwiY3JlYXRlQ29udHJvbGxlciIsImNvbnRyb2xsZXJOYW1lIiwicmVxdWlyZSIsInByb2Nlc3MiLCJlbnYiLCJGSUxFUEFUSCIsImVycm9yIiwiRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiMmdDQWVZOzJGQWZaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxLQUFNQSxDQUFBQSxpQkFBa0IsQ0FFcEI7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUNJQyxnQkFBZ0IsQ0FBQ0MsY0FBRCxDQUFpQixpREFDN0IsR0FBSSx5QkFDQSxNQUFPLEtBQUtDLE9BQU8sQ0FBRSxHQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBUyxvQkFBbUJKLGNBQWUsZUFBM0QsQ0FBWixHQUFQLENBQ0gsQ0FDRCxNQUFPSyxLQUFQLENBQWMseUJBQ1YsS0FBTSxJQUFJQyxDQUFBQSxLQUFKLENBQVcsR0FBRU4sY0FBZSxzQkFBNUIsQ0FBTixDQUNILENBQ0osQ0FqQm1CLEMsd0JBbUJ4Qk8sTUFBTSxDQUFDQyxPQUFQLENBQWlCVixpQkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogXG4gKiBDbGFzcyByZXByZXNlbnRpbmcgdGhlIGZhY3RvcnkgZm9yIGJ1aWxkaW5nIHNwZWNpZmllZCBjb250cm9sbGVyLiBJdCBpcyByZXNwb25zaWJsZSBmb3IgYnVpbGRpbmcgdGhlXG4gKiBzcGVjaWZpZWQgY29udHJvbGxlciBvYmplY3QuIEZhY3RvcnkgRGVzaWduIFBhdHRlcm4gaXMgdXNlZCBpbiB0aGlzIGNsYXNzIGZvciBjcmVhdGluZyBkZXNpcmVkIG9iamVjdHNcbiAqIHBvbHltb3JwaGljYWxseS4gVGhlIG9iamVjdCBtYWRlIGlzIGRlZmluZWQgYWxyZWFkeSBhbmQgdGh1cyB0aGUgcmVxdWlyZWQgaW5zdGFuY2UgaXMgcmV0dXJuZWQuXG4gKi9cbmNsYXNzIENvbnRyb2xsZXJGYWN0b3J5IHtcblxuICAgIC8qKlxuICAgICogQ3JlYXRlcyBjb250cm9sbGVyIG9mIHR5cGUgc3BlY2lmaWVkIGJ5IGdldHRpbmcgdGhlIGNvbnRyb2xsZXJOYW1lIHNwZWNpZmllZCBcbiAgICAqIGFzIGEgcGFyYW1ldGVyIGluIHRoZSBmdW5jdGlvbiBkZWZpbml0aW9uLiBJdCBjcmVhdGVzIHRoZSBzcGVjaWZpYyBjb250cm9sbGVyIG9iamVjdCBcbiAgICAqIHVzaW5nIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZSBmcm9tIGNvbmZpZy5qcyBhbmQgcmV0dXJucyB0aGUgY29udHJvbGxlciBvYmplY3QgY3JlYXRlZC4gRXJyb3IgXG4gICAgKiBoYW5kbGluZyBpcyBhbHNvIGRvbmUgaW4gdGhlIGNhc2UgaWYgdGhlIGNvbnRyb2xsZXIgaXMgbm90IGNyZWF0ZWQgZHVlIHRvIHNvbWUgcmVhc29ucyxcbiAgICAqIGp1c3QgdGhyb3cgdGhlIGVycm9yIHNwZWNpZnlpbmcgdGhlIHByb2JsZW0gbWVzc2FnZS5cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb250cm9sbGVyTmFtZSBcbiAgICAqL1xuICAgIGNyZWF0ZUNvbnRyb2xsZXIoY29udHJvbGxlck5hbWUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgKHJlcXVpcmUoYCR7cHJvY2Vzcy5lbnYuRklMRVBBVEh9L2FwcC9jb250cm9sbGVycy8ke2NvbnRyb2xsZXJOYW1lfUNvbnRyb2xsZXIuanNgKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7Y29udHJvbGxlck5hbWV9IG9iamVjdCBub3QgY3JlYXRlZC5gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gQ29udHJvbGxlckZhY3Rvcnk7XG4iXX0=