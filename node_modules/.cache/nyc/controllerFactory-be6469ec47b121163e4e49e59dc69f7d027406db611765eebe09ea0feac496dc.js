function cov_1cosq8rz5a(){var path="/home/eiman.waheed/Desktop/mvc-node/core/controllers/controllerFactory.js";var hash="71500a76023ad25f3d6526d05a19504f797dd2e6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/eiman.waheed/Desktop/mvc-node/core/controllers/controllerFactory.js",statementMap:{"0":{start:{line:6,column:0},end:{line:24,column:1}},"1":{start:{line:17,column:8},end:{line:22,column:9}},"2":{start:{line:18,column:12},end:{line:18,column:107}},"3":{start:{line:21,column:12},end:{line:21,column:69}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:16,column:4},end:{line:16,column:5}},loc:{start:{line:16,column:37},end:{line:23,column:5}},line:16}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"71500a76023ad25f3d6526d05a19504f797dd2e6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1cosq8rz5a=function(){return actualCoverage;};}return actualCoverage;}cov_1cosq8rz5a();cov_1cosq8rz5a().s[0]++;/** 
 * Class representing the factory for building specified controller. It is responsible for building the
 * specified controller object. Factory Design Pattern is used in this class for creating desired objects
 * polymorphically. The object made is defined already and thus the required instance is returned.
 */module.exports=class controllerFactory{/**
    * Creates controller of type specified by getting the controllerName specified 
    * as a parameter in the function definition. It creates the specific controller object 
    * using the environment variable from config.js and returns the controller object created. Error 
    * handling is also done in the case if the controller is not created due to some reasons,
    * just throw the error specifying the problem message.
    * @param {string} controllerName 
    */createController(controllerName){cov_1cosq8rz5a().f[0]++;cov_1cosq8rz5a().s[1]++;try{cov_1cosq8rz5a().s[2]++;return new(require(`${process.env.FILEPATH}/app/controllers/${controllerName}Controller.js`))();}catch(error){cov_1cosq8rz5a().s[3]++;throw new Error(`${controllerName} object not created.`);}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJGYWN0b3J5LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjb250cm9sbGVyRmFjdG9yeSIsImNyZWF0ZUNvbnRyb2xsZXIiLCJjb250cm9sbGVyTmFtZSIsInJlcXVpcmUiLCJwcm9jZXNzIiwiZW52IiwiRklMRVBBVEgiLCJlcnJvciIsIkVycm9yIl0sIm1hcHBpbmdzIjoieWdDQWVZO21IQWZaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQUEsTUFBTSxDQUFDQyxPQUFQLENBQWlCLEtBQU1DLENBQUFBLGlCQUFrQixDQUVyQztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQ0lDLGdCQUFnQixDQUFDQyxjQUFELENBQWlCLGlEQUM3QixHQUFJLHlCQUNBLE1BQU8sS0FBS0MsT0FBTyxDQUFFLEdBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFTLG9CQUFtQkosY0FBZSxlQUEzRCxDQUFaLEdBQVAsQ0FDSCxDQUNELE1BQU9LLEtBQVAsQ0FBYyx5QkFDVixLQUFNLElBQUlDLENBQUFBLEtBQUosQ0FBVyxHQUFFTixjQUFlLHNCQUE1QixDQUFOLENBQ0gsQ0FDSixDQWpCb0MsQ0FBekMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogXG4gKiBDbGFzcyByZXByZXNlbnRpbmcgdGhlIGZhY3RvcnkgZm9yIGJ1aWxkaW5nIHNwZWNpZmllZCBjb250cm9sbGVyLiBJdCBpcyByZXNwb25zaWJsZSBmb3IgYnVpbGRpbmcgdGhlXG4gKiBzcGVjaWZpZWQgY29udHJvbGxlciBvYmplY3QuIEZhY3RvcnkgRGVzaWduIFBhdHRlcm4gaXMgdXNlZCBpbiB0aGlzIGNsYXNzIGZvciBjcmVhdGluZyBkZXNpcmVkIG9iamVjdHNcbiAqIHBvbHltb3JwaGljYWxseS4gVGhlIG9iamVjdCBtYWRlIGlzIGRlZmluZWQgYWxyZWFkeSBhbmQgdGh1cyB0aGUgcmVxdWlyZWQgaW5zdGFuY2UgaXMgcmV0dXJuZWQuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgY29udHJvbGxlckZhY3Rvcnkge1xuXG4gICAgLyoqXG4gICAgKiBDcmVhdGVzIGNvbnRyb2xsZXIgb2YgdHlwZSBzcGVjaWZpZWQgYnkgZ2V0dGluZyB0aGUgY29udHJvbGxlck5hbWUgc3BlY2lmaWVkIFxuICAgICogYXMgYSBwYXJhbWV0ZXIgaW4gdGhlIGZ1bmN0aW9uIGRlZmluaXRpb24uIEl0IGNyZWF0ZXMgdGhlIHNwZWNpZmljIGNvbnRyb2xsZXIgb2JqZWN0IFxuICAgICogdXNpbmcgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIGZyb20gY29uZmlnLmpzIGFuZCByZXR1cm5zIHRoZSBjb250cm9sbGVyIG9iamVjdCBjcmVhdGVkLiBFcnJvciBcbiAgICAqIGhhbmRsaW5nIGlzIGFsc28gZG9uZSBpbiB0aGUgY2FzZSBpZiB0aGUgY29udHJvbGxlciBpcyBub3QgY3JlYXRlZCBkdWUgdG8gc29tZSByZWFzb25zLFxuICAgICoganVzdCB0aHJvdyB0aGUgZXJyb3Igc3BlY2lmeWluZyB0aGUgcHJvYmxlbSBtZXNzYWdlLlxuICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRyb2xsZXJOYW1lIFxuICAgICovXG4gICAgY3JlYXRlQ29udHJvbGxlcihjb250cm9sbGVyTmFtZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyAocmVxdWlyZShgJHtwcm9jZXNzLmVudi5GSUxFUEFUSH0vYXBwL2NvbnRyb2xsZXJzLyR7Y29udHJvbGxlck5hbWV9Q29udHJvbGxlci5qc2ApKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtjb250cm9sbGVyTmFtZX0gb2JqZWN0IG5vdCBjcmVhdGVkLmApO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19