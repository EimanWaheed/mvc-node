function cov_1911q225lc(){var path="/var/www/html/mvc-node/core/controllers/controllerFactory.js";var hash="aa3dd2f0ae0ad5b6d4baa832b6b65a05b8350ed0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/var/www/html/mvc-node/core/controllers/controllerFactory.js",statementMap:{"0":{start:{line:18,column:8},end:{line:23,column:9}},"1":{start:{line:19,column:12},end:{line:19,column:107}},"2":{start:{line:22,column:12},end:{line:22,column:69}},"3":{start:{line:26,column:0},end:{line:26,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:37},end:{line:24,column:5}},line:17}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"aa3dd2f0ae0ad5b6d4baa832b6b65a05b8350ed0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1911q225lc=function(){return actualCoverage;};}return actualCoverage;}cov_1911q225lc();/** 
 * Class representing the factory for building specified controller. It is responsible for building the
 * specified controller object. Factory Design Pattern is used in this class for creating desired objects
 * polymorphically. The object made is defined already and thus the required instance is returned.
 */class ControllerFactory{/**
    * Creates controller of type specified by getting the controllerName specified 
    * as a parameter in the function definition. It creates the specific controller object 
    * using the environment variable from config.js and returns the controller object created. Error 
    * handling is also done in the case if the controller is not created due to some reasons,
    * just throw the error specifying the problem message.
    * @param {string} controllerName 
    * @returns {Object} controller object.
    */createController(controllerName){cov_1911q225lc().f[0]++;cov_1911q225lc().s[0]++;try{cov_1911q225lc().s[1]++;return new(require(`${process.env.FILEPATH}/app/controllers/${controllerName}Controller.js`))();}catch(error){cov_1911q225lc().s[2]++;throw new Error(`${controllerName} object not created.`);}}}cov_1911q225lc().s[3]++;module.exports=ControllerFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJGYWN0b3J5LmpzIl0sIm5hbWVzIjpbIkNvbnRyb2xsZXJGYWN0b3J5IiwiY3JlYXRlQ29udHJvbGxlciIsImNvbnRyb2xsZXJOYW1lIiwicmVxdWlyZSIsInByb2Nlc3MiLCJlbnYiLCJGSUxFUEFUSCIsImVycm9yIiwiRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiaS9CQWVZOzJGQWZaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FDQSxLQUFNQSxDQUFBQSxpQkFBa0IsQ0FFcEI7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQ0lDLGdCQUFnQixDQUFDQyxjQUFELENBQWlCLGlEQUM3QixHQUFJLHlCQUNBLE1BQU8sS0FBS0MsT0FBTyxDQUFFLEdBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFTLG9CQUFtQkosY0FBZSxlQUEzRCxDQUFaLEdBQVAsQ0FDSCxDQUNELE1BQU9LLEtBQVAsQ0FBYyx5QkFDVixLQUFNLElBQUlDLENBQUFBLEtBQUosQ0FBVyxHQUFFTixjQUFlLHNCQUE1QixDQUFOLENBQ0gsQ0FDSixDQWxCbUIsQyx3QkFvQnhCTyxNQUFNLENBQUNDLE9BQVAsQ0FBaUJWLGlCQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBcbiAqIENsYXNzIHJlcHJlc2VudGluZyB0aGUgZmFjdG9yeSBmb3IgYnVpbGRpbmcgc3BlY2lmaWVkIGNvbnRyb2xsZXIuIEl0IGlzIHJlc3BvbnNpYmxlIGZvciBidWlsZGluZyB0aGVcbiAqIHNwZWNpZmllZCBjb250cm9sbGVyIG9iamVjdC4gRmFjdG9yeSBEZXNpZ24gUGF0dGVybiBpcyB1c2VkIGluIHRoaXMgY2xhc3MgZm9yIGNyZWF0aW5nIGRlc2lyZWQgb2JqZWN0c1xuICogcG9seW1vcnBoaWNhbGx5LiBUaGUgb2JqZWN0IG1hZGUgaXMgZGVmaW5lZCBhbHJlYWR5IGFuZCB0aHVzIHRoZSByZXF1aXJlZCBpbnN0YW5jZSBpcyByZXR1cm5lZC5cbiAqL1xuY2xhc3MgQ29udHJvbGxlckZhY3Rvcnkge1xuXG4gICAgLyoqXG4gICAgKiBDcmVhdGVzIGNvbnRyb2xsZXIgb2YgdHlwZSBzcGVjaWZpZWQgYnkgZ2V0dGluZyB0aGUgY29udHJvbGxlck5hbWUgc3BlY2lmaWVkIFxuICAgICogYXMgYSBwYXJhbWV0ZXIgaW4gdGhlIGZ1bmN0aW9uIGRlZmluaXRpb24uIEl0IGNyZWF0ZXMgdGhlIHNwZWNpZmljIGNvbnRyb2xsZXIgb2JqZWN0IFxuICAgICogdXNpbmcgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIGZyb20gY29uZmlnLmpzIGFuZCByZXR1cm5zIHRoZSBjb250cm9sbGVyIG9iamVjdCBjcmVhdGVkLiBFcnJvciBcbiAgICAqIGhhbmRsaW5nIGlzIGFsc28gZG9uZSBpbiB0aGUgY2FzZSBpZiB0aGUgY29udHJvbGxlciBpcyBub3QgY3JlYXRlZCBkdWUgdG8gc29tZSByZWFzb25zLFxuICAgICoganVzdCB0aHJvdyB0aGUgZXJyb3Igc3BlY2lmeWluZyB0aGUgcHJvYmxlbSBtZXNzYWdlLlxuICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRyb2xsZXJOYW1lIFxuICAgICogQHJldHVybnMge09iamVjdH0gY29udHJvbGxlciBvYmplY3QuXG4gICAgKi9cbiAgICBjcmVhdGVDb250cm9sbGVyKGNvbnRyb2xsZXJOYW1lKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IChyZXF1aXJlKGAke3Byb2Nlc3MuZW52LkZJTEVQQVRIfS9hcHAvY29udHJvbGxlcnMvJHtjb250cm9sbGVyTmFtZX1Db250cm9sbGVyLmpzYCkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2NvbnRyb2xsZXJOYW1lfSBvYmplY3Qgbm90IGNyZWF0ZWQuYCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IENvbnRyb2xsZXJGYWN0b3J5O1xuIl19